# Rakenne

Ohjelman arkkitehtuuri on kolmikerroksinen ja perusrakenne koostuu kolmesta pakkauksesta: recipebook.ui, recipebook.domain ja recipebook.dao. Pakkaus recipebook.ui sisältää gravfisen käytöliittymän toetutuksen JafaFX:llä, recipebook.domin sisältää käyttöliittymäkoodin sekä ohjelman rakenteen kannalta tärkeät luokat ja recipebook.dao sisältää pysyväistallennuksesta vastavat luokat ja rajapinnat.

<img src="https://raw.githubusercontent.com/afroseppo/ot-harjoitustyo/77d1fe376c7805ee66a40e9d55e7112e77fed30d/dokumentaatio/kuvaajat/structure.svg" width="450">

## Käyttöliittymä

Käyttöiittymä sisältää viisi erillistä näkymää:
- kirjautuminen
- uuden käyttäjän luominen
- päänäkymä
- uuden repseptin luominen
- raaka-aineen lisääminen reseptiin
- reseptihaun tulokset

Jokainen näkymä on toteutettu omana Scene-oliona ja yksi näkymä on kerrallaan sijoitettuna sovelluksen stageen. Käyttöliittymä on ohjelmallisesti luokassa recipebook.ui.Gui

Käyttöliittymä on eristetty sovelluslogiikasta ja kutsuu sovelluslogiikkaluokan 'RecipebookService' olion metodeja.

## Sovelluslogiikka

Sovelluksen looginen datamalli muodostuu luokista User, Recipe ja Ingredient, jotka kuvaavat käyttäjiä, reseptejä sekä raaka-aineita. Luokkien väliset suhteet kuvattu alla:

<img src="

Toiminnallisuudesta vastaa luokan RecipebookService olio, joka tarjoaa käyttöliittymän toiminnoille metodeita. Näitä metodeita ovat:
- void logout()
- User getLoggedUser()
- boolean createUser(String username, String password)
- boolean login(String username, String password)
- boolean createNewRecipe(String name, String user)

RecipebookService pääsee käsittelemään käyttäjä-, resepti-, ja reseptin raaka-ainetietoja rajapintojen RecipeDao ja UserDao toteuttavien luokkien kautta.

## Tietojen pysyväistallennus

Pakkauksen recipebook.dao luokat DatabaseRecipeDao ja DatabaseUserDao käsittelevät tietojen tallentamisen h2-tietokantaan.

Luokat on toteutettu Data Access Object -mallilla, joten ne on mahdollista korvata jollain muulla toteutusmenetelmällä, jos tieton tallennustapaa halutaan vaihtaa esimerkiksi tekstiteidostoon tai muuhun vastaavaan.

### Tietokannat

Sovellus tallentaa käyttäjien, reseptien ja reseptiin kuuluvien raaka-aineiden tiedot erilliseen h2-tietokantaan. Sovelluksen juuressa on konfiguraatiotiedosto config.properties, joka määrittelee sekä tietokannan nimen, että tietokannan polun. Tietokantayhteyksiä käsitellään Javan java.sql-paketin avulla.

## Ohjelman rakenteen puutteet

### DAO-luokat

Tietokannan datankäsittelyn DAO-luokkiin on jäänyt pituudeltaan pitkiä metodeita, joissa tehdään suoria tietokantahakuja sekä asetetaan tietokantaan dataa. Lisäksi luokissa on toisteista koodia, sillä tietokantaan tallentaminen sekä tietokannasta haku ovat jokaisella kerralla melko samankaltaisia.

## Käyttöliittymä

Käyttöliittymän toteutukse JavaFX:llä voisi korvata esim. FXML-määrittelyllä, jotta koodin selkeys lisääntyisi (suuri määrä sovelluslogiikkaa ja tapahtumakäsittelijöitä ja GUI-elementtejä sekaisin). Lisäksi käyttöliittymän visuaalinen ilme olisi vaivattomampi saada kuntoon FXLM-määrittelyllä (ilman ylimääräisiä rivejä koodia).
